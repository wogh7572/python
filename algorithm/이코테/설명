array = [5, 7, 9, 0, 3, 1, 6, 2, 4, 8]


sol1)
def quick_sort(array, start, end):
  #원소의 개수가 1이면 종료
  if start>=end:
    return
  #피벗은 첫번째 원소
  pivot = start
  left = start + 1
  right = end
  while left<=right:
    #피벗보다 큰 데이터를 찾을 때 까지 반복
    while left<=end and array[left] <= array[pivot]:
      left+=1
    while right>=start and array[right] >= array[pivot]:
      right-=1
    if left>right:
      array[right], array[pivot] = array[pivot], array[right]
    else:
      array[left], array[right] = array[right], array[left]
     
  quick_sort(array, start, right-1)
  quick_sort(array, right+1, end)

quick_sort(array, 0, len(array)-1)
print(array)



sol2)

def quick_sort(array):
  if len(array)==1:
    return array
   pivot = array[0]
   tail = array[1:]
   left_side= [x for i in tail if x<=pivot]
   right_side= [x for i in rail if x>pivot]
   return quick_sort(left_side) + [pivot] + quick_sort(right_side)
 print(quick_sort(array))  
